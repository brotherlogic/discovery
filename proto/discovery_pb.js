/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.discovery.DiscoverRequest', null, global);
goog.exportSymbol('proto.discovery.DiscoverResponse', null, global);
goog.exportSymbol('proto.discovery.Empty', null, global);
goog.exportSymbol('proto.discovery.GetRequest', null, global);
goog.exportSymbol('proto.discovery.GetResponse', null, global);
goog.exportSymbol('proto.discovery.ListRequest', null, global);
goog.exportSymbol('proto.discovery.ListResponse', null, global);
goog.exportSymbol('proto.discovery.LockRequest', null, global);
goog.exportSymbol('proto.discovery.LockResponse', null, global);
goog.exportSymbol('proto.discovery.MasterRequest', null, global);
goog.exportSymbol('proto.discovery.MasterResponse', null, global);
goog.exportSymbol('proto.discovery.RegisterRequest', null, global);
goog.exportSymbol('proto.discovery.RegisterResponse', null, global);
goog.exportSymbol('proto.discovery.RegistryEntry', null, global);
goog.exportSymbol('proto.discovery.RegistryEntry.Version', null, global);
goog.exportSymbol('proto.discovery.ServiceList', null, global);
goog.exportSymbol('proto.discovery.StateRequest', null, global);
goog.exportSymbol('proto.discovery.StateResponse', null, global);
goog.exportSymbol('proto.discovery.UnregisterRequest', null, global);
goog.exportSymbol('proto.discovery.UnregisterResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.RegistryEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.RegistryEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.RegistryEntry.displayName = 'proto.discovery.RegistryEntry';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.RegistryEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.RegistryEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.RegistryEntry} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.RegistryEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    ip: msg.getIp(),
    port: msg.getPort(),
    name: msg.getName(),
    externalPort: msg.getExternalPort(),
    identifier: msg.getIdentifier(),
    master: msg.getMaster(),
    weakMaster: msg.getWeakMaster(),
    registerTime: msg.getRegisterTime(),
    timeToClean: msg.getTimeToClean(),
    lastSeenTime: msg.getLastSeenTime(),
    ignoresMaster: msg.getIgnoresMaster(),
    masterTime: msg.getMasterTime(),
    version: msg.getVersion()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.RegistryEntry} The clone.
 */
proto.discovery.RegistryEntry.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.RegistryEntry} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string ip = 1;
 * @return {string}
 */
proto.discovery.RegistryEntry.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.discovery.RegistryEntry.prototype.setIp = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.discovery.RegistryEntry.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.discovery.RegistryEntry.prototype.setPort = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.discovery.RegistryEntry.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.discovery.RegistryEntry.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool external_port = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.RegistryEntry.prototype.getExternalPort = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.discovery.RegistryEntry.prototype.setExternalPort = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string identifier = 5;
 * @return {string}
 */
proto.discovery.RegistryEntry.prototype.getIdentifier = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.discovery.RegistryEntry.prototype.setIdentifier = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool master = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.RegistryEntry.prototype.getMaster = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.discovery.RegistryEntry.prototype.setMaster = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool weak_master = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.RegistryEntry.prototype.getWeakMaster = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 12, false));
};


/** @param {boolean} value  */
proto.discovery.RegistryEntry.prototype.setWeakMaster = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional int64 register_time = 7;
 * @return {number}
 */
proto.discovery.RegistryEntry.prototype.getRegisterTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.discovery.RegistryEntry.prototype.setRegisterTime = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional int64 time_to_clean = 8;
 * @return {number}
 */
proto.discovery.RegistryEntry.prototype.getTimeToClean = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 8, 0));
};


/** @param {number} value  */
proto.discovery.RegistryEntry.prototype.setTimeToClean = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional int64 last_seen_time = 9;
 * @return {number}
 */
proto.discovery.RegistryEntry.prototype.getLastSeenTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 9, 0));
};


/** @param {number} value  */
proto.discovery.RegistryEntry.prototype.setLastSeenTime = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional bool ignores_master = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.RegistryEntry.prototype.getIgnoresMaster = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 10, false));
};


/** @param {boolean} value  */
proto.discovery.RegistryEntry.prototype.setIgnoresMaster = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional int64 master_time = 11;
 * @return {number}
 */
proto.discovery.RegistryEntry.prototype.getMasterTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 11, 0));
};


/** @param {number} value  */
proto.discovery.RegistryEntry.prototype.setMasterTime = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional Version version = 13;
 * @return {!proto.discovery.RegistryEntry.Version}
 */
proto.discovery.RegistryEntry.prototype.getVersion = function() {
  return /** @type {!proto.discovery.RegistryEntry.Version} */ (jspb.Message.getFieldProto3(this, 13, 0));
};


/** @param {!proto.discovery.RegistryEntry.Version} value  */
proto.discovery.RegistryEntry.prototype.setVersion = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * @enum {number}
 */
proto.discovery.RegistryEntry.Version = {
  V1: 0,
  V2: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.ServiceList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.discovery.ServiceList.repeatedFields_, null);
};
goog.inherits(proto.discovery.ServiceList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.ServiceList.displayName = 'proto.discovery.ServiceList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.discovery.ServiceList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.ServiceList.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.ServiceList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.ServiceList} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.ServiceList.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.discovery.RegistryEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.ServiceList} The clone.
 */
proto.discovery.ServiceList.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.ServiceList} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated RegistryEntry services = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.discovery.RegistryEntry>}
 */
proto.discovery.ServiceList.prototype.getServicesList = function() {
  return /** @type{!Array.<!proto.discovery.RegistryEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {Array.<!proto.discovery.RegistryEntry>} value  */
proto.discovery.ServiceList.prototype.setServicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.discovery.ServiceList.prototype.clearServicesList = function() {
  this.setServicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.Empty.displayName = 'proto.discovery.Empty';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.Empty} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.Empty} The clone.
 */
proto.discovery.Empty.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.Empty} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.StateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.StateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.StateResponse.displayName = 'proto.discovery.StateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.StateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.StateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.StateResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.StateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    longestCall: msg.getLongestCall(),
    mostFrequent: msg.getMostFrequent(),
    frequency: msg.getFrequency(),
    count: msg.getCount()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.StateResponse} The clone.
 */
proto.discovery.StateResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.StateResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 longest_call = 1;
 * @return {number}
 */
proto.discovery.StateResponse.prototype.getLongestCall = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.discovery.StateResponse.prototype.setLongestCall = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string most_frequent = 2;
 * @return {string}
 */
proto.discovery.StateResponse.prototype.getMostFrequent = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.discovery.StateResponse.prototype.setMostFrequent = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 frequency = 3;
 * @return {number}
 */
proto.discovery.StateResponse.prototype.getFrequency = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.discovery.StateResponse.prototype.setFrequency = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string count = 4;
 * @return {string}
 */
proto.discovery.StateResponse.prototype.getCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.discovery.StateResponse.prototype.setCount = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.StateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.StateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.StateRequest.displayName = 'proto.discovery.StateRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.StateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.StateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.StateRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.StateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.StateRequest} The clone.
 */
proto.discovery.StateRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.StateRequest} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.RegisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.RegisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.RegisterRequest.displayName = 'proto.discovery.RegisterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.RegisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.RegisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.RegisterRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.RegisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f),
    caller: msg.getCaller(),
    fanout: msg.getFanout()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.RegisterRequest} The clone.
 */
proto.discovery.RegisterRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.RegisterRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.RegisterRequest.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.RegisterRequest.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.RegisterRequest.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.RegisterRequest.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string caller = 2;
 * @return {string}
 */
proto.discovery.RegisterRequest.prototype.getCaller = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.discovery.RegisterRequest.prototype.setCaller = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool fanout = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.RegisterRequest.prototype.getFanout = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.discovery.RegisterRequest.prototype.setFanout = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.RegisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.RegisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.RegisterResponse.displayName = 'proto.discovery.RegisterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.RegisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.RegisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.RegisterResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.RegisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.RegisterResponse} The clone.
 */
proto.discovery.RegisterResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.RegisterResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.RegisterResponse.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.RegisterResponse.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.RegisterResponse.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.RegisterResponse.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.DiscoverRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.DiscoverRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.DiscoverRequest.displayName = 'proto.discovery.DiscoverRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.DiscoverRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.DiscoverRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.DiscoverRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.DiscoverRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && proto.discovery.RegistryEntry.toObject(includeInstance, f),
    caller: msg.getCaller()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.DiscoverRequest} The clone.
 */
proto.discovery.DiscoverRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.DiscoverRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry request = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.DiscoverRequest.prototype.getRequest = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.DiscoverRequest.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.DiscoverRequest.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.DiscoverRequest.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string caller = 2;
 * @return {string}
 */
proto.discovery.DiscoverRequest.prototype.getCaller = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.discovery.DiscoverRequest.prototype.setCaller = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.DiscoverResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.DiscoverResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.DiscoverResponse.displayName = 'proto.discovery.DiscoverResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.DiscoverResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.DiscoverResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.DiscoverResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.DiscoverResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.DiscoverResponse} The clone.
 */
proto.discovery.DiscoverResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.DiscoverResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.DiscoverResponse.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.DiscoverResponse.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.DiscoverResponse.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.DiscoverResponse.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.ListRequest.displayName = 'proto.discovery.ListRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    caller: msg.getCaller()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.ListRequest} The clone.
 */
proto.discovery.ListRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.ListRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string caller = 1;
 * @return {string}
 */
proto.discovery.ListRequest.prototype.getCaller = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.discovery.ListRequest.prototype.setCaller = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.ListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.ListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.ListResponse.displayName = 'proto.discovery.ListResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.ListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.ListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.ListResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.ListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    services: (f = msg.getServices()) && proto.discovery.ServiceList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.ListResponse} The clone.
 */
proto.discovery.ListResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.ListResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ServiceList services = 1;
 * @return {proto.discovery.ServiceList}
 */
proto.discovery.ListResponse.prototype.getServices = function() {
  return /** @type{proto.discovery.ServiceList} */ (
    jspb.Message.getWrapperField(this, proto.discovery.ServiceList, 1));
};


/** @param {proto.discovery.ServiceList|undefined} value  */
proto.discovery.ListResponse.prototype.setServices = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.ListResponse.prototype.clearServices = function() {
  this.setServices(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.ListResponse.prototype.hasServices = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.GetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.GetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.GetRequest.displayName = 'proto.discovery.GetRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.GetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.GetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.GetRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.GetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: msg.getJob(),
    server: msg.getServer(),
    friend: msg.getFriend()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.GetRequest} The clone.
 */
proto.discovery.GetRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.GetRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string job = 1;
 * @return {string}
 */
proto.discovery.GetRequest.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.discovery.GetRequest.prototype.setJob = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string server = 2;
 * @return {string}
 */
proto.discovery.GetRequest.prototype.getServer = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.discovery.GetRequest.prototype.setServer = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string friend = 3;
 * @return {string}
 */
proto.discovery.GetRequest.prototype.getFriend = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.discovery.GetRequest.prototype.setFriend = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.GetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.discovery.GetResponse.repeatedFields_, null);
};
goog.inherits(proto.discovery.GetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.GetResponse.displayName = 'proto.discovery.GetResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.discovery.GetResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.GetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.GetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.GetResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.GetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    servicesList: jspb.Message.toObjectList(msg.getServicesList(),
    proto.discovery.RegistryEntry.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.GetResponse} The clone.
 */
proto.discovery.GetResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.GetResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated RegistryEntry services = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.discovery.RegistryEntry>}
 */
proto.discovery.GetResponse.prototype.getServicesList = function() {
  return /** @type{!Array.<!proto.discovery.RegistryEntry>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {Array.<!proto.discovery.RegistryEntry>} value  */
proto.discovery.GetResponse.prototype.setServicesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.discovery.GetResponse.prototype.clearServicesList = function() {
  this.setServicesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.UnregisterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.UnregisterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.UnregisterRequest.displayName = 'proto.discovery.UnregisterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.UnregisterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.UnregisterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.UnregisterRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.UnregisterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f),
    address: msg.getAddress(),
    caller: msg.getCaller(),
    fanout: msg.getFanout()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.UnregisterRequest} The clone.
 */
proto.discovery.UnregisterRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.UnregisterRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.UnregisterRequest.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.UnregisterRequest.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.UnregisterRequest.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.UnregisterRequest.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.discovery.UnregisterRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.discovery.UnregisterRequest.prototype.setAddress = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string caller = 4;
 * @return {string}
 */
proto.discovery.UnregisterRequest.prototype.getCaller = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.discovery.UnregisterRequest.prototype.setCaller = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool fanout = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.UnregisterRequest.prototype.getFanout = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.discovery.UnregisterRequest.prototype.setFanout = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.UnregisterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.UnregisterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.UnregisterResponse.displayName = 'proto.discovery.UnregisterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.UnregisterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.UnregisterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.UnregisterResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.UnregisterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.UnregisterResponse} The clone.
 */
proto.discovery.UnregisterResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.UnregisterResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.LockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.LockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.LockRequest.displayName = 'proto.discovery.LockRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.LockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.LockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.LockRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.LockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    job: msg.getJob(),
    lockKey: msg.getLockKey(),
    requestor: msg.getRequestor()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.LockRequest} The clone.
 */
proto.discovery.LockRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.LockRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string job = 1;
 * @return {string}
 */
proto.discovery.LockRequest.prototype.getJob = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.discovery.LockRequest.prototype.setJob = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 lock_key = 2;
 * @return {number}
 */
proto.discovery.LockRequest.prototype.getLockKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.discovery.LockRequest.prototype.setLockKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string requestor = 3;
 * @return {string}
 */
proto.discovery.LockRequest.prototype.getRequestor = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.discovery.LockRequest.prototype.setRequestor = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.LockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.LockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.LockResponse.displayName = 'proto.discovery.LockResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.LockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.LockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.LockResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.LockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.LockResponse} The clone.
 */
proto.discovery.LockResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.LockResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.MasterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.MasterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.MasterRequest.displayName = 'proto.discovery.MasterRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.MasterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.MasterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.MasterRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.MasterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f),
    lockKey: msg.getLockKey(),
    masterElect: msg.getMasterElect(),
    fanout: msg.getFanout()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.MasterRequest} The clone.
 */
proto.discovery.MasterRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.MasterRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.MasterRequest.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.MasterRequest.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.MasterRequest.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.MasterRequest.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 lock_key = 2;
 * @return {number}
 */
proto.discovery.MasterRequest.prototype.getLockKey = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.discovery.MasterRequest.prototype.setLockKey = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool master_elect = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.MasterRequest.prototype.getMasterElect = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.discovery.MasterRequest.prototype.setMasterElect = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool fanout = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.discovery.MasterRequest.prototype.getFanout = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.discovery.MasterRequest.prototype.setFanout = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.discovery.MasterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.discovery.MasterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.discovery.MasterResponse.displayName = 'proto.discovery.MasterResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.discovery.MasterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.discovery.MasterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.discovery.MasterResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.discovery.MasterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && proto.discovery.RegistryEntry.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.discovery.MasterResponse} The clone.
 */
proto.discovery.MasterResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.discovery.MasterResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional RegistryEntry service = 1;
 * @return {proto.discovery.RegistryEntry}
 */
proto.discovery.MasterResponse.prototype.getService = function() {
  return /** @type{proto.discovery.RegistryEntry} */ (
    jspb.Message.getWrapperField(this, proto.discovery.RegistryEntry, 1));
};


/** @param {proto.discovery.RegistryEntry|undefined} value  */
proto.discovery.MasterResponse.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.discovery.MasterResponse.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.discovery.MasterResponse.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.discovery);
